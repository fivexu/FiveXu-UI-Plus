(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["Confirm"],{"0d23":function(e,n,t){"use strict";t("ec27")},"6b51":function(e,n,t){"use strict";t.r(n);var o=t("7a23");const a=Object(o["P"])("data-v-1d457884");Object(o["x"])("data-v-1d457884");const c={class:"confirm"},r=Object(o["g"])("点击确认弹窗"),u=Object(o["h"])("code",null,null,-1),i=Object(o["g"])("关闭前弹窗"),l=Object(o["h"])("code",null,null,-1),s=Object(o["g"])("自定义按钮"),f=Object(o["g"])("取消点击遮罩/Esc关闭"),b=Object(o["h"])("code",null,null,-1);Object(o["v"])();const d=a((e,n,t,d,m,p)=>{const C=Object(o["C"])("fx-button"),h=Object(o["C"])("fx-card"),O=Object(o["D"])("highlight");return Object(o["u"])(),Object(o["e"])("div",c,[Object(o["h"])(h,{title:"基础用法"},{hide:a(()=>[Object(o["M"])(Object(o["h"])("pre",null,[u],512),[[O,e.base]])]),default:a(()=>[Object(o["h"])(C,{onClick:e.baseConfirm},{default:a(()=>[r]),_:1},8,["onClick"])]),_:1}),Object(o["h"])(h,{title:"关闭前判断"},{hide:a(()=>[Object(o["M"])(Object(o["h"])("pre",null,[l],512),[[O,e.before]])]),default:a(()=>[Object(o["h"])(C,{onClick:e.beforeConfirm},{default:a(()=>[i]),_:1},8,["onClick"])]),_:1}),Object(o["h"])(h,{title:"自定义"},{hide:a(()=>[Object(o["M"])(Object(o["h"])("pre",null,[b],512),[[O,e.option]])]),default:a(()=>[Object(o["h"])(C,{onClick:e.optionBtnConfirm},{default:a(()=>[s]),_:1},8,["onClick"]),Object(o["h"])(C,{onClick:e.optionCloseConfirm},{default:a(()=>[f]),_:1},8,["onClick"])]),_:1})])});var m=t("9ab4"),p=t("f182"),C=t("99ee"),h=function(){return new Promise((function(e){return setTimeout((function(){return e(Math.random())}),1e3)}))},O=Object(o["i"])({name:"viewConfirm",setup:function(){var e=this,n=function(){Object(p["a"])(C["b"],"自定义标题").then((function(){p["c"].success("确定")})).catch((function(){p["c"].warning("取消")}))},t=function(){Object(p["a"])({content:C["b"],title:"自定义标题",beforeClose:function(n,t,o){return Object(m["b"])(e,void 0,void 0,(function(){var e;return Object(m["c"])(this,(function(a){switch(a.label){case 0:return p["c"].success("当前点击类型 "+n),"define"!==n?[3,2]:(t.setDefineLoading(!0),[4,h()]);case 1:return e=a.sent(),t.setDefineLoading(!1),e>.5?p["c"].warning("提交失败!"):o(),[3,3];case 2:"cancel"===n?(t.setCancelLoading(!0),setTimeout((function(){o()}),1e3)):o(),a.label=3;case 3:return[2]}}))}))}}).then((function(){p["c"].success("确定")})).catch((function(e){p["c"].warning(e)}))},o=function(){Object(p["a"])({content:"自定义内容",title:"自定义标题",cancelText:"错误",defineText:"正确",roundButton:!0}).then((function(){p["c"].success("确定")})).catch((function(e){p["c"].warning(e)}))},a=function(){Object(p["a"])({content:"自定义内容",title:"自定义标题",closeOnEscape:!1,closeOnModal:!1}).then((function(){p["c"].success("确定")})).catch((function(e){p["c"].warning(e)}))},c="<fx-button @click=\"baseConfirm\">点击确认弹窗</fx-button>\n\nexport default defineComponent({\n    setup() {\n      const baseConfirm = (): void => {\n        FxConfirm(defaultContent, '自定义标题').then(() => {\n          FxMessage('确定')\n        }).catch(() => {\n          FxMessage('取消')\n        })\n      }\n    }\n})",r="<fx-button @click=\"beforeConfirm\">关闭前弹窗</fx-button>\n\nexport default defineComponent({\n    setup() {\n      const test = (): Promise<number> => new Promise(resolve => setTimeout(() => resolve(Math.random()), 1000))\n      const beforeConfirm = (): void => {\n      FxConfirm({\n        content: defaultContent,\n        title: '自定义标题',\n        beforeClose: async (action, app, next) => {\n          FxMessage.success('当前点击类型' + action)\n          if (action === 'define') {\n            app.setDefineLoading(true)\n            const random = await test()\n            app.setDefineLoading(false)\n            if (random > 0.5) {\n              FxMessage.warning('提交失败!')\n            } else {\n              next()\n            }\n          } else if (action === 'cancel') {\n            app.setCancelLoading(true)\n            setTimeout(() => {\n              next()\n            }, 1000)\n          } else {\n            next()\n          }\n        }}).then(() => {\n          FxMessage.success('确定')\n        }).catch(action => {\n          FxMessage.warning(action)\n        })\n      }\n    }\n})",u="<fx-button @click=\"optionBtnConfirm\">自定义按钮</fx-button>\n      <fx-button @click=\"optionCloseConfirm\">取消点击遮罩/Esc关闭</fx-button>\n\nexport default defineComponent({\n    setup() {\n      const optionBtnConfirm = (): void => {\n        FxConfirm({\n          content: '自定义内容',\n          title: '自定义标题',\n          cancelText: '错误',\n          defineText: '正确',\n          roundButton: true\n        }).then(() => {\n          FxMessage.success('确定')\n        }).catch(action => {\n          FxMessage.warning(action)\n        })\n      }\n      const optionCloseConfirm = (): void => {\n        FxConfirm({\n          content: '自定义内容',\n          title: '自定义标题',\n          closeOnEscape: false,\n          closeOnModal: false\n        }).then(() => {\n          FxMessage.success('确定')\n        }).catch(action => {\n          FxMessage.warning(action)\n        })\n      }\n    }\n})";return{base:c,before:r,option:u,beforeConfirm:t,optionBtnConfirm:o,optionCloseConfirm:a,baseConfirm:n}}});t("0d23");O.render=d,O.__scopeId="data-v-1d457884";n["default"]=O},"99ee":function(e,n,t){"use strict";t.d(n,"b",(function(){return o})),t.d(n,"c",(function(){return a})),n["a"]=[{name:"按钮",router:"/layout/button"},{name:"文字连接",router:"/layout/link"},{name:"单选框",router:"/layout/radio"},{name:"多选框",router:"/layout/checkbox"},{name:"输入框",router:"/layout/input"},{name:"计算器",router:"/layout/inputNumber"},{name:"选择器",router:"/layout/select"},{name:"开关",router:"/layout/switch"},{name:"滑块",router:"/layout/slider"},{name:"表单",router:"/layout/form"},{name:"标签",router:"/layout/tag"},{name:"进度条",router:"/layout/progress"},{name:"树",router:"/layout/tree"},{name:"分页",router:"/layout/pagination"},{name:"标记",router:"/layout/badge"},{name:"头像",router:"/layout/avatar"},{name:"加载",router:"/layout/loading"},{name:"提示",router:"/layout/tooltip"},{name:"卡片",router:"/layout/card"},{name:"下拉",router:"/layout/dropdown"},{name:"消息",router:"/layout/message"},{name:"通知",router:"/layout/notify"},{name:"弹窗",router:"/layout/confirm"},{name:"对话弹框",router:"/layout/dialog"},{name:"轮播图",router:"/layout/carousel"}];var o="Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。",a=[{value:"蒙奇·D·路飞",role:"船长",label:"蒙奇·D·路飞"},{value:"罗罗诺亚·索隆",role:"剑士",label:"罗罗诺亚·索隆"},{value:"文斯莫克·山治",role:"厨师",label:"文斯莫克·山治"},{value:"托尼托尼·乔巴",role:"医生",label:"托尼托尼·乔巴",disabled:!0},{value:"娜美",role:"航海士",label:"娜美",disabled:!0},{value:"乌索普",role:"狙击手",label:"乌索普"},{value:"妮可·罗宾",role:"考古学家",label:"妮可·罗宾",disabled:!0},{value:"弗兰奇",role:"船匠",label:"弗兰奇"},{value:"布鲁克",role:"音乐家",label:"布鲁克"},{value:"甚平",role:"舵手",label:"甚平"}]},ec27:function(e,n,t){}}]);
//# sourceMappingURL=Confirm.ab41951f.js.map